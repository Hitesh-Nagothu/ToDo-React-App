{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","filteredItems","this","filter","setState","Date","now","preventDefault","newItem","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,I,kCCwCAA,MAnCf,SAAmBC,GAEf,IACMC,EADMD,EAAME,MACMC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBACIC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SAAW,SAACC,GAAOZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAEhE,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAC1CC,QAAS,kBAAIhB,EAAMiB,WAAWb,EAAKI,cAVTJ,EAAKI,QAiB/C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SAEKlB,O,eCxBjBmB,IAAQC,IAAIC,K,IAmGGC,E,kDA/Fb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IAEDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAIR,EAAKkB,YAAY,EAAKA,YAAYC,KAAjB,gBACjB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBACb,EAAKV,WAAW,EAAKA,WAAWU,KAAhB,gBAChB,EAAKd,UAAU,EAAKA,UAAUc,KAAf,gBAdC,E,8CAiBlB,SAAWnB,GACT,IAAMqB,EAAeC,KAAKN,MAAMtB,MAAM6B,QAAO,SAAA3B,GAAI,OAC/CA,EAAKI,MAAOA,KACZsB,KAAKE,SAAS,CACZ9B,MAAO2B,M,uBAIb,SAAUnB,EAAMF,GACd,IAAMN,EAAO4B,KAAKN,MAAMtB,MACxBA,EAAMC,KACJ,SAAAC,GACQA,EAAKI,MAAMA,IACbJ,EAAKM,KAAKA,MAIlBoB,KAAKE,SAAS,CACZ9B,MAAMA,M,yBAMV,SAAYU,GAEVkB,KAAKE,SACH,CACEP,YAAY,CACVf,KAAKE,EAAEE,OAAOL,MACdD,IAAIyB,KAAKC,W,qBAMjB,SAAQtB,GACNA,EAAEuB,iBACF,IAAMC,EAAQN,KAAKN,MAAMC,YACzB,GAAoB,KAAjBW,EAAQ1B,KAAY,CACrB,IAAMR,EAAM,GAAD,mBAAK4B,KAAKN,MAAMtB,OAAhB,CAAuBkC,IAEpCN,KAAKE,SAAS,CACZ9B,MAAMA,EACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,S,oBASV,WACE,OACC,sBAAKH,UAAU,MAAf,UACG,iCACA,uBAAME,GAAG,aAAc8B,SAAUP,KAAKF,QAAtC,UACE,uBAAOtB,KAAK,OAAOgC,YAAY,aAC/B7B,MAAOqB,KAAKN,MAAMC,YAAYf,KAC9BC,SAAUmB,KAAKJ,cACf,wBAAQpB,KAAK,SAAb,sBAMJ,cAAC,EAAD,CAAWJ,MAAO4B,KAAKN,MAAMtB,MAC7Be,WAAYa,KAAKb,WACjBJ,UAAYiB,KAAKjB,mB,GA1FL0B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa10440a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItems.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n\r\n    const items=props.items;\r\n    const listItems = items.map(item =>\r\n        {\r\n            return <div className=\"list\" key={item.key}>\r\n                <p>\r\n                    <input\r\n                        type=\"text\" \r\n                        id={item.key}\r\n                        value={item.text}\r\n                        onChange={ (e) => {props.setUpdate(e.target.value, item.key)}} />\r\n                  \r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon='trash'\r\n                    onClick={()=>props.deleteItem(item.key)}    />              \r\n                </span>\r\n\r\n                </p>\r\n\r\n            </div>\r\n        })\r\n    return(\r\n        <div>\r\n            <FlipMove duration={250} easing=\"ease-in-out\">\r\n\r\n                {listItems}\r\n\r\n            </FlipMove>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ListItems from './ListItems';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    \n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n\n    this.handleInput=this.handleInput.bind(this);\n    this.addItem=this.addItem.bind(this);\n    this.deleteItem=this.deleteItem.bind(this);\n    this.setUpdate=this.setUpdate.bind(this);\n  }\n\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item=> \n      item.key !==key);\n      this.setState({\n        items: filteredItems\n      })\n  }\n\n  setUpdate(text, key){\n    const items= this.state.items;\n    items.map(\n      item=> {\n          if (item.key===key){\n            item.text=text;\n          }\n      }\n    )\n    this.setState({\n      items:items\n    })\n  }\n\n\n\n  handleInput(e){\n   \n    this.setState(\n      {\n        currentItem:{\n          text:e.target.value,\n          key:Date.now()\n        }\n      }\n    )\n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem=this.state.currentItem;\n    if(newItem.text !== \"\"){\n      const items=[...this.state.items, newItem];\n\n    this.setState({\n      items:items,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    })\n\n    }\n\n  }\n\n\n  render(){\n    return (\n     <div className=\"App\">\n        <header>\n        <form id=\"to-do-form\"  onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter Text\"\n          value={this.state.currentItem.text}\n          onChange={this.handleInput}></input>\n          <button type=\"submit\">Add</button>\n        </form>\n        {/* <p>{this.state.items.text}</p> */}\n\n\n      </header>\n      <ListItems items={this.state.items}\n      deleteItem={this.deleteItem}\n      setUpdate= {this.setUpdate}\n      ></ListItems>\n     </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}